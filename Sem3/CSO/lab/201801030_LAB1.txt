q1)	
	area lab11,code,readonly
	entry
	ldr r0,=0x4000
	ldr r1,=0x4004
	ldr r2,=4
	ldr r3,=5
	str r2,[r0]
	str r3,[r1]
	sub r4,r3,r2
	ldr r5,=0x4008
	str r4,[r5]
	end
q2)

	area lab12,code,readonly
	entry
	ldr r0,=5
	ldr r1,=1
	and r2,r1,r0
	cmps r2,r1
	beq odd
	ldr r4,=2
	b exit
odd
	ldr r4,=1
exit

	end

q3)

	area lab13,code,readonly
	entry
	ldr r0,=data1
	ldr r1,=data2
	ldr r2,[r0,#4]
	ldr r3,[r1,#4]
	adds r4,r3,r2
	ldr r5,[r0]
	ldr r6,[r1]
	adc r7,r6,r5
data1 dcd 0x11111111,0xf2222222
data2 dcd 0x22222222,0x44444444
	end

q4)
	area lab14,code,readonly
	entry
	ldr r0,=data1
	ldr r1,=0x4020
	ldr r2,[r0]
	str r2,[r1]
data1 dcd 0xBDA35D12
	end

q5)

	area lab15,code,readonly
	entry
	ldr r0,=4
	ldr r1,=5
	ldr r2,=0x4000
	ldr r3,=0x4004
	str r0,[r2]
	str r1,[r3]
	eor r4,r0,r1
	eor r5,r4,r0
	eor r6,r4,r1
	str r5,[r2]
	str r6,[r3]
	end
	
q6)

	area lab16,code,readonly
	entry
	ldr r0,=0x12345678
	ldr r1,=0x4000
	str r0,[r1]
	ldr r2,=0xff000000
	and r2,r0
	ldr r3,=0x00ff0000
	and r3,r0
	ldr r4,=0x0000ff00
	and r4,r0
	ldr r5,=0x000000ff
	and r5,r0
	ldr r6,=0xbb000000
	mvn r6,r6
	and r6,r2
	ldr r7,=0x00bb0000
	orr r7,r3
	ldr r8,=0x0000bb00
	eor r8,r4
	ldr r9,=0x000000bb
	orr r9,r5
	ldr r10,=0
	orr r10,r6
	orr r10,r7
	orr r10,r8
	orr r10,r9
	ldr r11,=0x4004
	str r10,[r11]
	end
q7)

We can use MOV command to load values into registers provided they lie in the range 0-255. Moreover if any number right rotated
even number of times lies in the range 0-255 then it can be moved to registers using the MOV command. 0xFFAC does not lie in
0-255 and it doesn't even comes in the range after right rotation. So we cannot use MOV command in this case.


