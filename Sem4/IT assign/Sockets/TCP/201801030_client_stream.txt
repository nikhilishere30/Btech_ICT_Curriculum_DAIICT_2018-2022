/* To compile this program use the following command */
/* $ gcc tcp_simple_client.c -o tcp_simple_client.o */

/* To run this program use the following command */
/* $ ./tcp_simple_client.o localhost <port number> */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netdb.h> 

int main(int argc, char *argv[])
{
    int sockfd, portno, n,ser;

    struct sockaddr_in serv_addr;
    struct hostent *server;

    char buffer[256];
    if (argc < 3) {
       fprintf(stderr,"usage %s hostname port\n", argv[0]);
       exit(0);
    }
    
    portno = atoi(argv[2]);
    sockfd = socket(AF_INET, SOCK_STREAM, 0);

	char *message1;
    
    if (sockfd < 0) 
        perror("ERROR opening socket");
    
    server = gethostbyname(argv[1]);
    
    if (server == NULL) {
        fprintf(stderr,"ERROR, no such host\n");
        exit(0);
    }
    
    bzero((char *) &serv_addr, sizeof(serv_addr));
    serv_addr.sin_family = AF_INET;
    bcopy((char *)server->h_addr, 
         (char *)&serv_addr.sin_addr.s_addr,
         server->h_length);
    serv_addr.sin_port = htons(portno);
    
    if (connect(sockfd,(struct sockaddr *)&serv_addr,sizeof(serv_addr)) < 0) 
        perror("ERROR connecting");
    while(1)
    {
	    printf("Please enter the message: ");
	    bzero(buffer,256);
	    fgets(buffer,255,stdin);
	    
	    n = write(sockfd,buffer,strlen(buffer));
	   
	    if (n < 0) 
		 perror("ERROR writing to socket");

	    else if(n>=0)
	    printf("Acknowledgement message from server.\n");
	   
	    bzero(buffer,256);
	    n = read(sockfd,buffer,255);
	    
	    if (n < 0) 
		 perror("ERROR reading from socket");

	    printf("%s\n",buffer);
	    bzero(buffer,256);
     }
 
    return 0;
}

